[{"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\index.js":"1","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\App.jsx":"2","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\reportWebVitals.js":"3","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\serviceWorkerRegistration.js":"4","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppHeader.jsx":"5","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Home.jsx":"6","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\About.jsx":"7","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppNav.jsx":"8","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\SignUp.jsx":"9","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Profile.jsx":"10","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\store.js":"11","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\storage-service.js":"12","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\userService.js":"13","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\userAction.js":"14","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\userReducer.js":"15","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Settings.jsx":"16","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\gameAction.js":"17","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\gameReducer.js":"18","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\gameService.js":"19","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Adding.jsx":"20","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Playing.jsx":"21","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Category.jsx":"22","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\itemReducer.js":"23","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\itemAction.js":"24","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\itemService.js":"25","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Timer.jsx":"26","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundIsFinished.jsx":"27","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\ToggleWrapper.jsx":"28","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\DynamicChildCmp.jsx":"29","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\FinishCmpChild.jsx":"30","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundCmpChild.jsx":"31","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\TimeCmpChild.jsx":"32","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Dashboard.jsx":"33","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatCmp.jsx":"34","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatModal.jsx":"35","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Loading.jsx":"36","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Logout.jsx":"37","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\i18next.js":"38"},{"size":1720,"mtime":1623151650647,"results":"39","hashOfConfig":"40"},{"size":2331,"mtime":1623677650897,"results":"41","hashOfConfig":"40"},{"size":364,"mtime":499162500000,"results":"42","hashOfConfig":"40"},{"size":5064,"mtime":499162500000,"results":"43","hashOfConfig":"40"},{"size":6170,"mtime":1623610493622,"results":"44","hashOfConfig":"40"},{"size":14310,"mtime":1623677814225,"results":"45","hashOfConfig":"40"},{"size":1382,"mtime":1623611249690,"results":"46","hashOfConfig":"40"},{"size":1195,"mtime":1623610690503,"results":"47","hashOfConfig":"40"},{"size":2897,"mtime":1622730022212,"results":"48","hashOfConfig":"40"},{"size":200,"mtime":1618096752132,"results":"49","hashOfConfig":"40"},{"size":739,"mtime":1619528000638,"results":"50","hashOfConfig":"40"},{"size":235,"mtime":1608723174900,"results":"51","hashOfConfig":"40"},{"size":2219,"mtime":1623678050322,"results":"52","hashOfConfig":"40"},{"size":9605,"mtime":1623677984002,"results":"53","hashOfConfig":"40"},{"size":265,"mtime":1621353790120,"results":"54","hashOfConfig":"40"},{"size":16371,"mtime":1623674631298,"results":"55","hashOfConfig":"40"},{"size":4260,"mtime":1623677969271,"results":"56","hashOfConfig":"40"},{"size":266,"mtime":1621353809410,"results":"57","hashOfConfig":"40"},{"size":8354,"mtime":1623686076252,"results":"58","hashOfConfig":"40"},{"size":14324,"mtime":1623690295205,"results":"59","hashOfConfig":"40"},{"size":17203,"mtime":1623687071161,"results":"60","hashOfConfig":"40"},{"size":4525,"mtime":1623599143051,"results":"61","hashOfConfig":"40"},{"size":257,"mtime":1621875492051,"results":"62","hashOfConfig":"40"},{"size":366,"mtime":1621875470976,"results":"63","hashOfConfig":"40"},{"size":363,"mtime":1621875479405,"results":"64","hashOfConfig":"40"},{"size":2270,"mtime":1621350463917,"results":"65","hashOfConfig":"40"},{"size":2146,"mtime":1623682949039,"results":"66","hashOfConfig":"40"},{"size":581,"mtime":1621460404394,"results":"67","hashOfConfig":"40"},{"size":1355,"mtime":1623582901343,"results":"68","hashOfConfig":"40"},{"size":1056,"mtime":1620678650768,"results":"69","hashOfConfig":"40"},{"size":946,"mtime":1623596741648,"results":"70","hashOfConfig":"40"},{"size":948,"mtime":1623597071357,"results":"71","hashOfConfig":"40"},{"size":2557,"mtime":1623674631298,"results":"72","hashOfConfig":"40"},{"size":9271,"mtime":1623699836817,"results":"73","hashOfConfig":"40"},{"size":802,"mtime":1623597383061,"results":"74","hashOfConfig":"40"},{"size":148,"mtime":1621367466822,"results":"75","hashOfConfig":"40"},{"size":1422,"mtime":1623674631295,"results":"76","hashOfConfig":"40"},{"size":643,"mtime":1623609955353,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1qzk62e",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\index.js",[],["166","167"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\App.jsx",["168"],"import { Switch, Route, useLocation } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Home } from './pages/Home';\nimport { About } from './pages/About';\nimport { SignUp } from './pages/SignUp';\nimport { Settings } from './pages/Settings';\nimport { Adding } from './pages/Adding';\nimport { Playing } from './pages/Playing';\nimport { Dashboard } from './pages/Dashboard';\nimport { AppHeader } from './cmps/AppHeader';\nimport { AppNav } from './cmps/AppNav';\n\nimport React, { Component } from 'react';\nimport Swal from 'sweetalert2'\nimport { loadUser } from './store/actions/userAction';\n\nfunction _App(props) {\n  var { pathname } = useLocation()\n  const { nickname } = props.user\n  if (!nickname) pathname = \"/\"\n  loadUser()\n\n\n  var { width, height } = window.screen\n\n  window.addEventListener('resize', () => {\n\n    var w = window.screen.width\n    var h = window.screen.height\n\n    var isMobile = (w < 1000 && h < 500) || (w < 500 && h < 1000) ? true : false\n    var totalCheck = isMobile && w > width ? true : false\n\n    if ((width === h && height === w) && isMobile)\n\n      Swal.fire({\n        title: totalCheck ? 'Please Rotate Your Device' : 'Great!',\n        icon: totalCheck ? 'warning' : 'success',\n        showConfirmButton: false,\n        allowOutsideClick: totalCheck ? false : true,\n        backdrop: '#e8eaed',\n        background: '#e8eaed',\n        iconColor: totalCheck ? '#ff3737c2' : '#ff955a',\n        timer: totalCheck ? false : 1200\n      })\n\n    width = window.screen.width\n    height = window.screen.height\n  })\n\n  return (\n    <div className=\"App\">\n      {pathname !== '/play' && pathname !== \"/\" && <AppHeader />}\n      {pathname !== '/play' && pathname !== \"/\" && <AppNav />}\n      <Switch>\n        <Route path='/about' component={About} />\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path='/settings' component={Settings} />\n        <Route path='/adding' component={Adding} />\n        <Route path=\"/play\" component={Playing} />\n        <Route path='/home' component={Home} />\n        <Route path=\"/\" component={SignUp} />\n      </Switch>\n    </div>\n  )\n\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.userModule.user\n  }\n}\nconst mapDispatchToProps = {\n  loadUser\n\n}\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\n\n\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\reportWebVitals.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\serviceWorkerRegistration.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppHeader.jsx",["169"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport $ from \"jquery\";\r\n\r\nimport { Settings } from '../pages/Settings'\r\nimport { Logout } from './Logout'\r\nimport { Home } from '../pages/Home';\r\n\r\n\r\nimport avatarSrc from '../assets/imgs/user.png'\r\nimport logoSrc from '../assets/imgs/bookLogo.png'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport { loadUser, logout } from '../store/actions/userAction.js'\r\n\r\n\r\nimport clock from '../assets/imgs/time.png'\r\nimport finish from '../assets/imgs/finish.png'\r\nimport round from '../assets/imgs/round.png'\r\n\r\nclass _AppHeader extends Component {\r\n\r\n    state = {\r\n        className: 'menu',\r\n        menuOptions: [{ txt: 'home', to: 'home' }, { txt: 'adding', to: 'adding' }, { txt: 'dashboard', to: 'dashboard' }, { txt: 'settings', to: 'settings' }, { txt: 'about', to: 'about' }],\r\n        sideMenuOptions: [{ txt: 'home', to: 'about' }, { txt: 'editor', to: 'adding' }, { txt: 'dashboard', to: 'dashboard' }],\r\n        isSettingsOpen: false,\r\n        isProfileOpen: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadUser()\r\n    }\r\n    // componentDidUpdate() {\r\n\r\n    //     $(\"html\").click((e) => {\r\n    //         if (e) {\r\n    //             if (e.target.id !== 'menu' && e.target.id !== 'settings') {\r\n    //                 $(\"#menu\").removeClass('open');\r\n    //             }\r\n    //             if (e.target.id !== 'app-menu' && e.target.id !== 'menu-icon') {\r\n    //                 $(\"#app-menu\").removeClass('open');\r\n    //             }\r\n    //         }\r\n    //     })\r\n\r\n    // }\r\n\r\n\r\n    updateClass = () => this.setState({ className: this.state.className === 'menu' ? 'menu open' : 'menu' })\r\n\r\n    render() {\r\n        const { className, menuOptions, isSettingsOpen, isProfileOpen, sideMenuOptions } = this.state\r\n        const { nickname, image } = this.props.user || {}\r\n        var isEn = this.props?.lang === 'English' ? true : false\r\n        return (\r\n            <React.Fragment>\r\n                <header className=\"app-header pf\">\r\n                    <div className=\"inner flex\">\r\n                        <div className=\"flex j-between\">\r\n                            <img src={logoSrc} alt=\"\" />\r\n                            <p>trinius</p>\r\n                        </div>\r\n                        <div className=\"wider-menu flex\">\r\n                            {sideMenuOptions.map((o, idx) => <NavLink to={`/${o.to}`} exact={true} activeClassName=\"active-link\" key={idx}>{o.txt}</NavLink>)}\r\n                            <p id={`${isSettingsOpen ? 'settings' : ''}`} onClick={() => this.setState({ isSettingsOpen: !this.state.isSettingsOpen })}>{isEn ? 'Settings' : 'הגדרות'}<span><SettingsIcon /></span></p>\r\n                            <Logout logout={this.props.logout} history={this.props.history} />\r\n                        </div>\r\n                        <MenuIcon id={`${className === 'menu open' ? 'menu-icon' : ''}`} className=\"menu-icon pa\" onClick={() => this.setState({ className: className === 'menu' ? 'menu open' : 'menu' })} alt=\"\" />\r\n\r\n                        <div className=\"backImgs\">\r\n                            <img src={clock} alt=\"\" />\r\n                            <img src={round} alt=\"\" />\r\n                            <img src={finish} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                    <section id=\"app-menu\" className={className} onBlur={(ev) => {\r\n                        ev.stopPropagation()\r\n                        this.setState({ className: 'menu' })\r\n                    }}>\r\n                        <div className=\"little-profile\">\r\n                            <img src={image ? image?.src : avatarSrc} style={{ backgroundColor: image?.bgClr }} alt=\"\" className=\"flex\" />\r\n                            <p className=\"tac\">{nickname ? nickname : 'User'}</p>\r\n                        </div>\r\n                        <div className=\"menu-options flex column\">\r\n                            {menuOptions.map((o, idx) => <NavLink to={`/${o.to}`} onClick={() => this.setState({ className: 'menu' })} exact={true} activeClassName=\"active-menu-link\" key={idx}>{o.txt}</NavLink>)}\r\n                            <img src={logoSrc} alt=\"\" />\r\n                        </div>\r\n                    </section>\r\n\r\n                </header>\r\n\r\n                <section id=\"menu\" className={`settings-menu ${isSettingsOpen ? 'open' : ''}`}><Settings isOnDesktop={true} /></section>\r\n\r\n                <div className=\"left-area\">\r\n\r\n                    <img src={clock} alt=\"\" />\r\n                    <img src={round} alt=\"\" />\r\n                    <img src={finish} alt=\"\" />\r\n                    <img src={clock} alt=\"\" />\r\n                    <img src={round} alt=\"\" />\r\n                    <img src={finish} alt=\"\" />\r\n                    <img src={clock} alt=\"\" />\r\n                    <img src={round} alt=\"\" />\r\n                    <img src={finish} alt=\"\" />\r\n                    <img src={clock} alt=\"\" />\r\n                    <img src={round} alt=\"\" />\r\n                    <img src={finish} alt=\"\" />\r\n                    <div className=\"profile flex a-center j-center pa ttc tac\" onClick={() => this.setState({ isProfileOpen: !this.state.isProfileOpen })}>\r\n                        <p>{isEn ? 'Your Profile' : 'פרופיל'}</p>\r\n                        <ArrowRightIcon />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={`back-dark ${isProfileOpen ? 'shown' : ''}`}> </div>\r\n                <div className={`profile-div ${isProfileOpen ? 'open' : ''}`}>  <Home isOnDesktop={true} /></div>\r\n\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userModule.user,\r\n        lang: state.gameModule.game.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUser,\r\n    logout\r\n}\r\nexport const AppHeader = withRouter(connect(mapStateToProps, mapDispatchToProps)(_AppHeader));","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Home.jsx",["170"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n//functions:\r\nimport { loadUser, updateNickname, updateUserImage } from '../store/actions/userAction.js'\r\nimport { loadGame, updateCountry } from '../store/actions/gameAction.js'\r\n\r\nimport avatarSrc from '../assets/imgs/user.png'\r\n\r\nimport a01 from '../assets/imgs/avatars/avatar-01.png'\r\nimport a02 from '../assets/imgs/avatars/avatar-02.png'\r\nimport a03 from '../assets/imgs/avatars/avatar-03.png'\r\nimport a04 from '../assets/imgs/avatars/avatar-04.png'\r\nimport a05 from '../assets/imgs/avatars/avatar-05.png'\r\nimport a06 from '../assets/imgs/avatars/avatar-06.png'\r\nimport a07 from '../assets/imgs/avatars/avatar-07.png'\r\nimport a08 from '../assets/imgs/avatars/avatar-08.png'\r\nimport a09 from '../assets/imgs/avatars/avatar-09.png'\r\nimport a10 from '../assets/imgs/avatars/avatar-10.png'\r\nimport a11 from '../assets/imgs/avatars/avatar-11.png'\r\nimport a12 from '../assets/imgs/avatars/avatar-12.png'\r\nimport a13 from '../assets/imgs/avatars/avatar-13.png'\r\nimport a14 from '../assets/imgs/avatars/avatar-14.png'\r\nimport a15 from '../assets/imgs/avatars/avatar-15.png'\r\nimport a16 from '../assets/imgs/avatars/avatar-16.png'\r\nimport a17 from '../assets/imgs/avatars/avatar-17.png'\r\nimport a18 from '../assets/imgs/avatars/avatar-18.png'\r\nimport a19 from '../assets/imgs/avatars/avatar-19.png'\r\nimport a20 from '../assets/imgs/avatars/avatar-20.png'\r\nimport a21 from '../assets/imgs/avatars/avatar-21.png'\r\nimport a22 from '../assets/imgs/avatars/avatar-22.png'\r\nimport a23 from '../assets/imgs/avatars/avatar-23.png'\r\nimport a24 from '../assets/imgs/avatars/avatar-24.png'\r\nimport a25 from '../assets/imgs/avatars/avatar-25.png'\r\nimport a26 from '../assets/imgs/avatars/avatar-26.png'\r\nimport a27 from '../assets/imgs/avatars/avatar-27.png'\r\nimport a28 from '../assets/imgs/avatars/avatar-28.png'\r\nimport a29 from '../assets/imgs/avatars/avatar-29.png'\r\nimport a30 from '../assets/imgs/avatars/avatar-30.png'\r\nimport a31 from '../assets/imgs/avatars/avatar-31.png'\r\nimport a32 from '../assets/imgs/avatars/avatar-32.png'\r\nimport a33 from '../assets/imgs/avatars/avatar-33.png'\r\nimport a34 from '../assets/imgs/avatars/avatar-34.png'\r\nimport a35 from '../assets/imgs/avatars/avatar-35.png'\r\nimport a36 from '../assets/imgs/avatars/avatar-36.png'\r\nimport a37 from '../assets/imgs/avatars/avatar-37.png'\r\nimport a38 from '../assets/imgs/avatars/avatar-38.png'\r\nimport a39 from '../assets/imgs/avatars/avatar-39.png'\r\nimport a40 from '../assets/imgs/avatars/avatar-40.png'\r\nimport a41 from '../assets/imgs/avatars/avatar-41.png'\r\nimport a42 from '../assets/imgs/avatars/avatar-42.png'\r\nimport a43 from '../assets/imgs/avatars/avatar-43.png'\r\nimport a44 from '../assets/imgs/avatars/avatar-44.png'\r\nimport a45 from '../assets/imgs/avatars/avatar-45.png'\r\nimport a46 from '../assets/imgs/avatars/avatar-46.png'\r\nimport a47 from '../assets/imgs/avatars/avatar-47.png'\r\nimport a48 from '../assets/imgs/avatars/avatar-48.png'\r\nimport a49 from '../assets/imgs/avatars/avatar-49.png'\r\nimport a50 from '../assets/imgs/avatars/avatar-50.png'\r\nimport a51 from '../assets/imgs/avatars/avatar-51.png'\r\nimport a52 from '../assets/imgs/avatars/avatar-52.png'\r\nimport a53 from '../assets/imgs/avatars/avatar-53.png'\r\nimport a54 from '../assets/imgs/avatars/avatar-54.png'\r\nimport a55 from '../assets/imgs/avatars/avatar-55.png'\r\nimport a56 from '../assets/imgs/avatars/avatar-56.png'\r\nimport a57 from '../assets/imgs/avatars/avatar-57.png'\r\nimport a58 from '../assets/imgs/avatars/avatar-58.png'\r\nimport a59 from '../assets/imgs/avatars/avatar-59.png'\r\nimport a60 from '../assets/imgs/avatars/avatar-60.png'\r\n\r\n\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport PhotoCameraOutlinedIcon from '@material-ui/icons/PhotoCameraOutlined';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport StarsRoundedIcon from '@material-ui/icons/StarsRounded';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\n//cmps:\r\nimport { Loading } from '../cmps/Loading.jsx';\r\n\r\nclass _Home extends Component {\r\n\r\n    state = {\r\n        isEditClicked: false,\r\n        nickname: '',\r\n        countryFilter: '',\r\n        countryClass: \"choose-country flex tac\",\r\n        cc: 'countries-div',\r\n        dc: 'div',\r\n        pc: 'p',\r\n        countriesOpsClass: 'countries-options grid',\r\n        isSelectImgClicked: false,\r\n        currCountry: 'Brazil',\r\n        imgsUrl: [a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a60],\r\n        imgsClr: ['antiquewhite', 'cadetblue', '#7bf9adfc', '#d4ff7c', '#85a4bd', '#8c8c8c', '#63a14e', '#656f77', '#a58765', '#4e4b48', '#365041fc', '#7a3131', '#9c9c27', '#79d3de'],\r\n        countries: [\r\n            ['Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Canada', 'China', 'Colombia', 'Denmark', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'India', 'Israel', 'Italy', 'Japan', 'Mexico', 'Morocco', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'Ukraine', 'USA'],\r\n            ['ארגנטינה', 'אוסטרליה', 'אוסטריה', 'בלגיה', 'ברזיל', 'קנדה', 'סין', 'קולומביה', 'גנמרק', 'אנגליה', 'אתיופיה', 'פינלנד', 'צרפת', 'גרמניה', 'הודו', 'ישראל', 'איטליה', 'יפן', 'מקסיקו', 'מרוקו', 'פיליפינים', 'פולין', 'פורטוגל', 'רומניה', 'רוסיה', 'ספרד', 'שוודיה', 'שווייץ', 'תאילנד', 'אוקראינה', 'ארצות הברית']\r\n        ],\r\n        isChooseCountryClicked: false,\r\n        isCountryChosen: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await this.props.loadUser()\r\n        await this.props.loadGame()\r\n        const { user, history } = this.props\r\n\r\n        if (!user?.nickname) history?.push(\"/\")\r\n        let { imgsUrl, imgsClr } = this.state\r\n        imgsUrl = imgsUrl.map(s => s = { src: s, bgClr: imgsClr[Math.floor(Math.random() * 14)] }) \r\n        this.setState({ nickname: user?.nickname, isSelectImgClicked: user.image?.src.slice(14, 15) === 'u' ? true : false, imgsUrl })\r\n    }\r\n\r\n    handleChange = ({ target }) => this.setState({ nickname: target.value })\r\n    handleCountryChange = ({ target }) => this.setState({ countryFilter: target.value })\r\n\r\n    selectImg = async (ev, imgSrc) => {\r\n        ev.preventDefault()\r\n        this.setState({ isSelectImgClicked: false })\r\n        await this.props.updateUserImage(imgSrc)\r\n    }\r\n\r\n    get countriesForDisplay() {\r\n        let { countries, countryFilter } = this.state\r\n        const { lang, country } = this.props.game\r\n        var currCountriesArr = countries[lang === 'English' ? 0 : 1]\r\n        currCountriesArr = currCountriesArr.filter(c => c.includes(countryFilter))\r\n        return currCountriesArr\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { imgsUrl, isEditClicked, nickname, isSelectImgClicked, countryFilter, countryClass, isChooseCountryClicked, cc, dc, pc, countriesOpsClass } = this.state\r\n        const { user, game, isOnDesktop } = this.props\r\n        const { pointsObj, image } = user\r\n        const { country, lang } = game\r\n        var isEn = lang === 'English' ? true : false\r\n        const countries = this.countriesForDisplay\r\n        const txtObj = isEn ? {\r\n            about: 'ABOUT',\r\n            placeholder:'A Capital Letter...',\r\n            points: 'Points',\r\n            avatar: 'SELECT YOUR AVATAR',\r\n            play: 'Play'\r\n        } : {\r\n            about: '',\r\n            placeholder: 'חפש/י מדינה...',\r\n            points: 'נקודות',\r\n            avatar: 'בחר/י תמונה',\r\n            play: 'שחק/י'\r\n        }\r\n        if (!this.state || !this.props.user) return <Loading />\r\n        return (\r\n            <section className=\"home-container main-layout pf\">\r\n                <div className={countryClass}>\r\n                    <small>{txtObj.about}</small>\r\n                    <small className=\"flex a-center j-center\">{country}</small>\r\n                    <SwapHorizIcon style={{ display: isChooseCountryClicked ? 'none' : 'flex' }} onClick={() => {\r\n                        this.setState({ isChooseCountryClicked: true, countryClass: 'choose-country flex tac wide' })\r\n                        setTimeout(() => {\r\n                            this.setState({ cc: 'countries-div open' })\r\n                        }, 300);\r\n                        setTimeout(() => {\r\n                            this.setState({ dc: 'div shown', pc: 'p shown', countriesOpsClass: 'countries-options grid shown' })\r\n                        }, 600);\r\n                    }} />\r\n                    <div className={cc}>\r\n                        <header>\r\n                            <div className={dc} style={{ direction: isEn ? 'ltr' : 'rtl' }}>\r\n                                <input type=\"text\" placeholder={txtObj.placeholder} value={countryFilter} onChange={this.handleCountryChange} />\r\n                                <SearchRoundedIcon style={{ display: isEn ? 'block' : 'none' }} />\r\n                            </div>\r\n                            <p className={pc}>{country}</p>\r\n                            <CloseRoundedIcon onClick={() => {\r\n                                this.setState({ countryClass: 'choose-country flex tac close', countriesOpsClass: 'countries-options grid', dc: 'div', pc: 'p' })\r\n                                setTimeout(() => {\r\n                                    this.setState({ countryClass: 'choose-country flex tac' })\r\n                                }, 500);\r\n                                setTimeout(() => {\r\n                                    this.setState({ isChooseCountryClicked: false })\r\n                                }, 1000);\r\n                            }} />\r\n                        </header>\r\n                        <div className={countriesOpsClass}>\r\n                            {countries.map((c, idx) => <div key={idx} style={{ color: !isOnDesktop ? country === c ? 'black' : '' : country === c ? 'white' : '' }} onClick={async () => await this.props.updateCountry(c)}>\r\n                                <FiberManualRecordIcon />\r\n                                <p style={{ fontSize: c.length >= 10 ? 'smaller' : 'inherit' }}>{c}</p>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {!isEditClicked && <div className=\"avatar flex j-evenly ma\" style={{ display: isChooseCountryClicked && !isOnDesktop ? 'none' : 'flex' }}>\r\n                    <p>{nickname}</p>\r\n                    <CreateOutlinedIcon onClick={() => this.setState({ isEditClicked: !isEditClicked })} />\r\n                </div>}\r\n                {isEditClicked && <div className=\"edit-name pa left-trans a-center\">\r\n                    <input type=\"text\" required placeholder={nickname} value={nickname} onChange={this.handleChange} autoFocus=\"on\" autoComplete=\"off\" className=\"tac\" />\r\n                    <CheckIcon onClick={() => {\r\n                        this.setState({ isEditClicked: nickname ? false : true }, () => {\r\n                            if (this.state.nickname) this.props.updateNickname(nickname, this.props?.user)\r\n                        })\r\n\r\n                    }} />\r\n                </div>}\r\n                <div className=\"image flex j-center pa left-trans\" style={{ display: isChooseCountryClicked && !isOnDesktop ? 'none' : 'flex' }}>\r\n                    <span className=\"uploadFComputer\"><PhotoCameraOutlinedIcon onClick={() => this.setState({ isSelectImgClicked: !isSelectImgClicked })} /></span>\r\n                    {!image?.src && <img src={avatarSrc} alt=\"\" />}\r\n                    {image?.src && <img src={image?.src} alt=\"\" className=\"chosen-img\" style={{ backgroundColor: image?.bgClr }} />}\r\n                    {this.props?.user && <span className=\"first-letter-avatar flex a-center j-center\"><small>{this.props.user.nickname?.slice(0, 1).toUpperCase()}</small></span>}\r\n                </div>\r\n\r\n                <section className=\"score-section flex j-between a-center pa\" style={{ opacity: isChooseCountryClicked ? '0.2' : '1' }}>\r\n                    <span><StarsRoundedIcon /></span>\r\n                    <div className=\"score tac\">\r\n                        <p>{txtObj.points}</p>\r\n                        <p>{pointsObj?.fullPoints}</p>\r\n                    </div>\r\n                    <span><StarsRoundedIcon /></span>\r\n                </section>\r\n\r\n                <Link to=\"/play\"><div className=\"playing tac pa\" style={{ opacity: isChooseCountryClicked ? '0.2' : '1' }}>{txtObj.play}</div></Link>\r\n\r\n                <section className={`imgs-section grid ${isSelectImgClicked ? 'open' : ''}`} style={{ display: !isChooseCountryClicked || isOnDesktop ? 'grid' : 'none' }}>\r\n                    <header className=\"flex j-between ma\">\r\n                        <p className=\"ma\">{txtObj.avatar}</p>\r\n                        <CloseRoundedIcon onClick={() => this.setState({ isSelectImgClicked: false, className: 'imgs-section grid' })} className=\"ma\" />\r\n                    </header>\r\n                    <div className=\"options grid pr\">\r\n                        {imgsUrl.map((src, idx) => <div key={idx} onClick={(ev) => this.selectImg(ev, src)} style={{ backgroundColor: src.bgClr }}><img src={src.src} alt=\"\" /></div>)}\r\n                    </div>\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userModule.user,\r\n        game: state.gameModule.game,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUser,\r\n    loadGame,\r\n    updateNickname,\r\n    updateUserImage,\r\n    updateCountry\r\n}\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\About.jsx",["171"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { gameService } from \"../services/gameService\";\r\n\r\n\r\nfunction _About() {\r\n    const { t } = useTranslation()\r\n    var isEn = gameService.loadGame().then(data => {\r\n        return data.lang === 'English' ? true : false\r\n    }).then(e => isEn = e );\r\n\r\n    return (\r\n        <section className=\"app-about ttc pf left-trans\" style={{ fontFamily: isEn.then(e => e ? 'montserrat' : 'sans-serif') }}>\r\n            <header>\r\n                <p style={{ letterSpacing: isEn.then(e => e ? '1.3vw' : '') }}>{t('a-welcome')}</p>\r\n                <small>{t('a-small')}</small>\r\n            </header>\r\n            <div>{t('a-div')}</div>\r\n            <footer>\r\n                <p>{t('a-wish')}</p>\r\n            </footer>\r\n            <footer>\r\n                <Link to=\"/settings\">\r\n                    <p>{t('a-lnk-s')}</p>\r\n                </Link>\r\n                <Link to='/play'>\r\n                    <p>{t('a-lnk-p')}</p>\r\n                </Link>\r\n            </footer>\r\n        </section>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.gameModule.game.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\nexport const About = connect(mapStateToProps, mapDispatchToProps)(_About)","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppNav.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\SignUp.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Profile.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\store.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\storage-service.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\userService.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\userAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\userReducer.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Settings.jsx",["172","173"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n// import { Link } from 'react-router-dom'\r\nimport { Howl, Howler } from 'howler';\r\nimport i18n from \"../services/i18next\";\r\nimport translate from \"translate\";\r\n\r\n//components:\r\nimport { Category } from '../cmps/Category';\r\nimport { ToggleWrapper } from '../cmps/ToggleWrapper';\r\nimport { Logout } from '../cmps/Logout';\r\n\r\n//functions:\r\nimport { loadGame, updateSoundStatus, updateSound, updateLang, updateTime, updateTimeStatus, updateLevel, updateUseQStatus, updateCountry } from '../store/actions/gameAction.js'\r\nimport { loadUser, logout } from '../store/actions/userAction.js'\r\nimport { gameService } from '../services/gameService';\r\n\r\n//icons:\r\nimport VolumeUpRoundedIcon from '@material-ui/icons/VolumeUpRounded';\r\nimport LanguageRoundedIcon from '@material-ui/icons/LanguageRounded';\r\nimport AccessAlarmRoundedIcon from '@material-ui/icons/AccessAlarmRounded';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\r\nimport SignalCellularNoSimOutlinedIcon from '@material-ui/icons/SignalCellularNoSimOutlined';\r\nimport BarChartRoundedIcon from '@material-ui/icons/BarChartRounded';\r\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\n\r\n//tunes:\r\n//piano-covers:\r\nimport p01 from '../music/piano/01.mp3'\r\nimport p02 from '../music/piano/02.mp3'\r\nimport p03 from '../music/piano/03.mp3'\r\nimport p04 from '../music/piano/04.mp3'\r\nimport p05 from '../music/piano/05.mp3'\r\nimport p06 from '../music/piano/06.mp3'\r\nimport p07 from '../music/piano/07.mp3'\r\nimport p08 from '../music/piano/08.mp3'\r\nimport p09 from '../music/piano/09.mp3'\r\nimport p10 from '../music/piano/10.mp3'\r\nimport p11 from '../music/piano/11.mp3'\r\nimport p12 from '../music/piano/12.mp3'\r\nimport p13 from '../music/piano/13.mp3'\r\nimport p14 from '../music/piano/14.mp3'\r\nimport p15 from '../music/piano/15.mp3'\r\nimport p16 from '../music/piano/16.mp3'\r\nimport p17 from '../music/piano/17.mp3'\r\nimport p18 from '../music/piano/18.mp3'\r\nimport p19 from '../music/piano/19.mp3'\r\n\r\n//songs:\r\nimport s01 from '../music/songs/01.mp3'\r\nimport s02 from '../music/songs/02.mp3'\r\nimport s03 from '../music/songs/03.mp3'\r\nimport s04 from '../music/songs/04.mp3'\r\nimport s05 from '../music/songs/05.mp3'\r\nimport s06 from '../music/songs/06.mp3'\r\nimport s07 from '../music/songs/07.mp3'\r\nimport s08 from '../music/songs/08.mp3'\r\nimport s09 from '../music/songs/09.mp3'\r\nimport s10 from '../music/songs/10.mp3'\r\nimport s11 from '../music/songs/11.mp3'\r\nimport s12 from '../music/songs/12.mp3'\r\n\r\n\r\nvar music = {\r\n    overworld: new Howl({\r\n        src: [p01]\r\n    })\r\n}\r\n\r\nclass _Settings extends Component {\r\n\r\n    state = {\r\n        isSoundOn: false,\r\n        selectedSound: null,\r\n        languages: ['English', 'עברית'],\r\n        isTimeLevelOn: false,\r\n        timeOps: [60, 90, 120, 240],\r\n        selectedTime: null,\r\n        isCategoryOpen: false,\r\n        levels: [\r\n            { n: 'E', c: '#ff9800' },\r\n            { n: 'M', c: '#FF5733' },\r\n            { n: 'H', c: '#E92337' }\r\n        ],\r\n        selectedLevel: null,\r\n        useQStatus: '',\r\n        tunesArr: [\r\n            {\r\n                title: 'covers',\r\n                tunes: [\r\n                    { s: p01, n: 'Art of silence', isPlaying: false },\r\n                    { s: p02, n: 'friends - aura dione', isPlaying: false },\r\n                    { s: p03, n: 'bach - aria variata', isPlaying: false },\r\n                    { s: p04, n: 'the shadow of your smile', isPlaying: false },\r\n                    { s: p05, n: 'believer', isPlaying: false },\r\n                    { s: p06, n: 'everyone - monplaisir', isPlaying: false },\r\n                    { s: p07, n: 'attention - charlie puth', isPlaying: false },\r\n                    { s: p08, n: 'don\\'t stop me now - queen', isPlaying: false },\r\n                    { s: p09, n: 'chandelier - sia', isPlaying: false },\r\n                    { s: p10, n: 'how long - charlie puth', isPlaying: false },\r\n                    { s: p11, n: 'demons - imagine dragons', isPlaying: false },\r\n                    { s: p12, n: 'despacito', isPlaying: false },\r\n                    { s: p13, n: 'shape of you', isPlaying: false },\r\n                    { s: p14, n: 'the hills - the weekend', isPlaying: false },\r\n                    { s: p15, n: 'dance monkey - tones and i', isPlaying: false },\r\n                    { s: p16, n: 'in dreams - scott buckley', isPlaying: false },\r\n                    { s: p17, n: 'can\\'t stop my feet', isPlaying: false },\r\n                    { s: p18, n: 'empowered ending', isPlaying: false },\r\n                    { s: p19, n: 'atmosphere', isPlaying: false },\r\n                ]\r\n            },\r\n            {\r\n                title: 'songs',\r\n                tunes: [\r\n                    { s: s01, n: 'faded - alan walker', isPlaying: false },\r\n                    { s: s02, n: 'thank u, next - ariana grande', isPlaying: false },\r\n                    { s: s03, n: 'hallo - beyonce', isPlaying: false },\r\n                    { s: s04, n: 'bad guy - biilie eilish', isPlaying: false },\r\n                    { s: s05, n: 'lovely - billie eilish', isPlaying: false },\r\n                    { s: s06, n: 'my heart will go on - celine dion', isPlaying: false },\r\n                    { s: s07, n: 'perfect - ed sheeran', isPlaying: false },\r\n                    { s: s08, n: 'photograph - ed sheeran', isPlaying: false },\r\n                    { s: s09, n: 'story of life - one direction', isPlaying: false },\r\n                    { s: s10, n: 'what makes you beautiful - one direction', isPlaying: false },\r\n                    { s: s11, n: 'you & i - one direction', isPlaying: false },\r\n                    { s: s12, n: 'fade - tony tucker', isPlaying: false },\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadGame()\r\n        await this.props.loadUser()\r\n        const { user, history, game } = this.props\r\n        const { soundObj, timeObj, lang, level, useQ, country } = game\r\n\r\n        if (!user?.nickname) history?.push('/signup')\r\n\r\n        this.setState({ isSoundOn: soundObj?.soundStatus, useQStatus: useQ, isTimeLevelOn: timeObj?.timeStatus })\r\n\r\n        if (!lang) await this.props.updateLang('English')\r\n\r\n        if (!country) await this.props.updateCountry(lang === 'English' ? 'Brazil' : 'ברזיל')\r\n\r\n        if (!soundObj?.sound) {\r\n            this.setState({ isSoundOn: false, selectedSound: this.state.tunesArr[0].tunes[0] })\r\n            await this.props.updateSound(this.state.tunesArr[0].tunes[0])\r\n            await this.props.updateSoundStatus(this.state.isSoundOn)\r\n        } else this.setState({ selectedSound: soundObj.sound })\r\n\r\n        if (!timeObj?.time) {\r\n            this.setState({ isTimeLevelOn: false, selectedTime: 60 })\r\n            await this.props.updateTime(60)\r\n            await this.props.updateTimeStatus(this.state.isTimeLevelOn)\r\n        } else this.setState({ selectedTime: timeObj.time })\r\n\r\n        if (!level) {\r\n            this.setState({ selectedLevel: Object.values(this.state.levels)[0] })\r\n            await this.props.updateLevel(this.state.selectedLevel)\r\n        } else this.setState({ selectedLevel: level })\r\n\r\n    }\r\n\r\n    onUpdateLang = async ({ target }) => {\r\n        await this.props.updateLang(target.value)\r\n        const { country } = this.props?.game\r\n        var currCountry = gameService.tranCountry(target.value, country)\r\n        // await translate(target.value, {key: process.env.TRANSLATE_KEY, from: lang === 'English' ? 'en' : 'he', to: lang === 'English' ? 'he' : 'en' }).then(c => { currCountry = c })\r\n        // await this.props.updateCountry(currCountry)\r\n        await this.props.updateCountry(currCountry)\r\n        i18n.changeLanguage(this.lngForChange(target.value))\r\n    }\r\n\r\n    lngForChange = (lng) => lng === 'English' ? 'en' : 'he'\r\n\r\n    onCloseCategory = () => this.setState({ isCategoryOpen: false })\r\n\r\n    onUpdate = async (key, value) => {\r\n\r\n        switch (key) {\r\n            case 'soundStatus':\r\n                this.setState({ isSoundOn: value })\r\n                await this.props.updateSoundStatus(value)\r\n                break\r\n            case 'sound':\r\n                this.setState({ selectedSound: value })\r\n                await this.props.updateSound(value)\r\n                break\r\n            case 'timeStatus':\r\n                this.setState({ isTimeLevelOn: value })\r\n                await this.props.updateTimeStatus(value)\r\n                break\r\n            case 'time':\r\n                this.setState({ selectedTime: value })\r\n                await this.props.updateTime(value)\r\n                break\r\n            case 'level':\r\n                this.setState({ selectedLevel: { ...value } })\r\n                await this.props.updateLevel(value)\r\n                break\r\n            case 'useQ':\r\n                this.setState({ useQStatus: value })\r\n                await this.props.updateUseQStatus(value)\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    soundPlay = (ev, src, value) => {\r\n        ev.stopPropagation()\r\n        music.overworld.stop()\r\n        this.checkCurrSound(src, value)\r\n        music = { overworld: new Howl({ src }) }\r\n        if (!music.overworld.playing()) music.overworld.play()\r\n    }\r\n\r\n    checkCurrSound = (src, value) => {\r\n        var fullTunesArr = this.falseAll()\r\n        fullTunesArr.forEach(arr => arr.tunes.forEach(currSound => {\r\n            if (currSound.s === src) currSound.isPlaying = value\r\n        }))\r\n        this.setState({ tunesArr: fullTunesArr })\r\n    }\r\n\r\n    falseAll = () => {\r\n        var fullTunesArr = this.state.tunesArr.slice()\r\n        fullTunesArr.forEach(arr => arr.tunes.forEach(t => t.isPlaying = false))\r\n        return fullTunesArr\r\n    }\r\n\r\n    soundStop = (ev, src, value) => {\r\n        ev.stopPropagation()\r\n        this.checkCurrSound(src, value)\r\n        music.overworld.stop()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        music.overworld.stop()\r\n        this.falseAll()\r\n    }\r\n\r\n    render() {\r\n        const { languages, isTimeLevelOn, isSoundOn, tunesArr, selectedSound, timeOps, selectedTime, isCategoryOpen, levels, selectedLevel, useQStatus } = this.state\r\n        const { game, isOnDesktop, children } = this.props\r\n        const { category, lang } = game\r\n        var lngs = gameService.setSettLngs()\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"settings left-trans\">\r\n                    <span className=\"span-children\">{children}</span>\r\n\r\n                    <div className=\"categories\">\r\n                        <div>\r\n                            <span><ClassIcon /></span>\r\n                            <p>{lngs[\"sett-c\"][this.lngForChange(lang)]}</p>\r\n                        </div>\r\n                        <div className=\"to-category flex j-evenly a-center\">\r\n                            <p className=\"pa a-center flex ttc\">{category?.name ? category.name.toLowerCase() : <SignalCellularNoSimOutlinedIcon />}</p>\r\n                            <DoubleArrowRoundedIcon onClick={() => this.setState({ isCategoryOpen: true })} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"levels\">\r\n                        <div>\r\n                            <span><BarChartRoundedIcon /></span>\r\n                            <p>{lngs[\"sett-l\"][this.lngForChange(lang)]}</p>\r\n                        </div>\r\n                        <div className=\"level-select flex j-between\">\r\n                            {levels.map((l, idx) => <div key={idx} onClick={() => this.onUpdate('level', l)} style={{ border: selectedLevel?.n === l.n && !isOnDesktop ? '2px solid black' : '', backgroundColor: l.c }}>\r\n                                <p style={{ color: selectedLevel?.n === l.n ? 'black' : 'white' }}>{l.n}</p>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ marginBottom: isSoundOn ? 0 : '3%', borderRadius: isSoundOn ? '5px 5px 0 0' : '5px' }}>\r\n                        <div>\r\n                            <span><VolumeUpRoundedIcon /></span>\r\n                            <p>{lngs[\"sett-s\"][this.lngForChange(lang)]}</p>\r\n                        </div>\r\n                        <ToggleWrapper obj={{ value: isSoundOn, key: 'soundStatus' }} onUpdate={this.onUpdate} />\r\n                    </div>\r\n                    <div className={`sound-select ${isSoundOn ? 'open' : ''}`}>\r\n                        <p className=\"selected-sound pa tas ma\">{selectedSound?.n}</p>\r\n                        {tunesArr.map((arr, idx) => <div key={idx}>\r\n                            <p className=\"piano-p tac\">{lngs[`sett-p-${arr.title}`][this.lngForChange(lang)]}</p>\r\n                            <div>\r\n                                {arr.tunes.map((p, idx) => <div className=\"tune\" key={idx} onClick={() => this.onUpdate('sound', p)} style={{ backgroundColor: selectedSound?.n === p.n ? '#ff9800' : '#e8eaed' }}>\r\n                                    {!p.isPlaying && <PlayCircleOutlineIcon onClick={(ev) => this.soundPlay(ev, p.s, true)} />}\r\n                                    {p.isPlaying && <PauseCircleOutlineIcon onClick={(ev) => this.soundStop(ev, p.s, false)} />}\r\n                                    <p>{p.n}</p>\r\n                                </div>)}\r\n                            </div>\r\n                        </div>)}\r\n                    </div>\r\n\r\n                    <div style={{ marginBottom: isTimeLevelOn ? 0 : '3%', borderRadius: isTimeLevelOn ? '5px 5px 0 0' : '5px' }}>\r\n                        <div>\r\n                            <span><AccessAlarmRoundedIcon /></span>\r\n                            <p>{lngs[\"sett-t\"][this.lngForChange(lang)]}</p>\r\n                        </div>\r\n                        <ToggleWrapper obj={{ value: isTimeLevelOn, key: 'timeStatus' }} onUpdate={this.onUpdate} />\r\n                    </div>\r\n                    <div className={`time-select flex j-between ${isTimeLevelOn ? 'open' : ''}`}>\r\n                        {timeOps.map((t, idx) => <div key={idx} onClick={() => this.onUpdate('time', t)} style={{ backgroundColor: selectedTime === t ? '#ff9800' : !isOnDesktop ? 'white' : '#151515', boxShadow: selectedTime === t ? '' : '0px 7px 0 #80808014' }}>\r\n                            <p>{t}</p>\r\n                        </div>)}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <span><LanguageRoundedIcon /></span>\r\n                            <p>{lngs[\"sett-lng\"][this.lngForChange(lang)]}</p>\r\n                        </div>\r\n                        <select name=\"languages\" onChange={this.onUpdateLang}>\r\n                            {languages.map((l, idx) => <option key={idx} value={l}>{l}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <span><QuestionAnswerOutlinedIcon /></span>\r\n                            <p>{lngs[\"sett-useQ\"][this.lngForChange(lang)]}</p>\r\n                        </div>\r\n                        <ToggleWrapper obj={{ value: useQStatus, key: 'useQ' }} onUpdate={this.onUpdate} />\r\n                    </div>\r\n\r\n                    <Logout logout={this.props.logout} history={this.props.history} />\r\n\r\n                </section>\r\n                <Category onClose={this.onCloseCategory} isOnDesktop={isOnDesktop} class={`category-section ${isCategoryOpen ? 'open' : ''}`} />\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        game: state.gameModule.game,\r\n        user: state.userModule.user\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadGame,\r\n    loadUser,\r\n    updateSound,\r\n    updateSoundStatus,\r\n    updateLang,\r\n    updateTime,\r\n    updateTimeStatus,\r\n    updateLevel,\r\n    updateUseQStatus,\r\n    updateCountry,\r\n    logout\r\n}\r\nexport const Settings = connect(mapStateToProps, mapDispatchToProps)(_Settings)\r\n\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\gameAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\gameReducer.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\gameService.js",["174","175"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Adding.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Playing.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Category.jsx",["176"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\n//icons:\r\nimport nature from '../assets/imgs/categories/nature-c.png'\r\nimport animals from '../assets/imgs/categories/animals-c.png'\r\nimport food from '../assets/imgs/categories/food-c.png'\r\nimport geography from '../assets/imgs/categories/geography-c.png'\r\nimport medicine from '../assets/imgs/categories/medicine-c.png'\r\nimport movies from '../assets/imgs/categories/movies-c.png'\r\nimport personalities from '../assets/imgs/categories/personalities-c.png'\r\nimport science from '../assets/imgs/categories/science-c.png'\r\nimport music from '../assets/imgs/categories/music-c.png'\r\nimport technology from '../assets/imgs/categories/technology-c.png'\r\nimport sports from '../assets/imgs/categories/sports-c.png'\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nimport { loadGame, updateCategory } from '../store/actions/gameAction.js'\r\n\r\n\r\nclass _Category extends Component {\r\n\r\n    state = {\r\n        categoriesSrc: [nature, geography, animals, personalities, movies, medicine, food, sports, music, science, technology],\r\n        categoriesNamesEnglish: ['nature', 'geography', 'animals', 'personalities', 'movies', 'medicine', 'food', 'sports', 'music', 'science', 'technology'],\r\n        categoriesNamesHebrew: ['טבע', 'גיאוגרפיה', 'בעלי חיים', 'אנשים', 'סרטים', 'רפואה', 'אוכל', 'ספורט', 'מוזיקה', 'מדע', 'טכנולוגיה'],\r\n        categories: [],\r\n        currCategory: ''\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.loadGame()\r\n        const { category } = this?.props?.game\r\n        let { categoriesNamesEnglish, categoriesSrc } = this.state\r\n        let categories = categoriesSrc.map((c, idx) => c = { name: categoriesNamesEnglish[idx].toUpperCase(), src: c })\r\n        this.setState({ currCategory: category, categories })\r\n    }\r\n\r\n    selectCategory = async (ev, currCategory) => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        this.setState({ currCategory })\r\n        await this.props.updateCategory(currCategory)\r\n    }\r\n\r\n    get categoriesForDisplay() {\r\n        const { lang } = this.props.game\r\n        let { categoriesNamesEnglish, categoriesNamesHebrew, categoriesSrc, currCategory } = this.state\r\n        let currArr = lang === 'English' ? categoriesNamesEnglish : categoriesNamesHebrew\r\n        var arr = lang === 'English' ? categoriesNamesHebrew : categoriesNamesEnglish\r\n        var category = currArr[arr.findIndex(c => c === currCategory.name)]\r\n        // let categories = categoriesSrc.map((c, idx) => c = { name: currArr[idx], src: c })\r\n        return [category, currArr]\r\n    }\r\n\r\n\r\n    render() {\r\n        const { currCategory, categories } = this.state\r\n        const { isOnDesktop, game } = this.props\r\n        var categoryForDisplay = this.categoriesForDisplay[0] ? this.categoriesForDisplay[0] : game?.category\r\n        var isEn = game.lang === 'English' ? true : false\r\n        return (\r\n            <section className={this.props.class}>\r\n                <header className=\"j-between tas\">\r\n                    <div className=\"category j-between\" style={{ direction: isEn ? 'ltr' : 'rtl' }}>\r\n                        <p style={{ fontFamily: isEn ? 'montserrat' : 'sans-serif' }}>{isEn ? 'Category' : 'קטגוריה'}</p>\r\n                        <img src={categoryForDisplay ? categoryForDisplay.src : nature} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"start\" onClick={this.props.onClose}>\r\n                        <p><CloseRoundedIcon /></p>\r\n                    </div>\r\n                </header>\r\n                <div className=\"categories grid\">\r\n                    {categories.map((c, idx) => <div onClick={(ev) => this.selectCategory(ev, c)} key={idx} style={{ fontSize: c.name.length >= 10 ? '14px' : '', backgroundColor: currCategory.name === c.name ? '#ff7629' : !isOnDesktop ? 'white' : '#cacaca', boxShadow: currCategory.name === c.name ? '' : '0px 5px 0 #80808014' }}>\r\n                        <img src={c.src} alt=\"\" />\r\n                        <p>{this.categoriesForDisplay[1][idx]}</p>\r\n                    </div>)}\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        game: state.gameModule.game\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadGame,\r\n    updateCategory\r\n}\r\nexport const Category = connect(mapStateToProps, mapDispatchToProps)(_Category)\r\n\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\itemReducer.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\itemAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\itemService.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Timer.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundIsFinished.jsx",["177","178"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\ToggleWrapper.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\DynamicChildCmp.jsx",["179"],"import React, { Component } from 'react';\r\nimport { FinishCmpChild } from './FinishCmpChild';\r\nimport { RoundCmpChild } from './RoundCmpChild';\r\nimport { TimeCmpChild } from './TimeCmpChild';\r\n\r\nexport class DynamicChildCmp extends Component {\r\n\r\n    state = { passingContinue: '' }\r\n\r\n    componentDidMount = () => {\r\n        var propsForDisplay = this.propsForDisplay()\r\n        this.setState({ passingContinue: propsForDisplay.continue })\r\n    }\r\n\r\n    propsForDisplay() {\r\n        return { continue: this.props.continue }\r\n    }\r\n\r\n    render() {\r\n        const { passingContinue } = this.state\r\n        const { roundFinishObj, isCategoryFinished,lang } = this.props\r\n        if (!roundFinishObj.status) return <h1></h1>\r\n        else\r\n            switch (roundFinishObj?.status) {\r\n                case 'round':\r\n                    return <RoundCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} />\r\n                case 'time':\r\n                    return <TimeCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} />\r\n                case 'finish':\r\n                    return <FinishCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} isCategoryFinished={isCategoryFinished} />\r\n                default:\r\n                    return null\r\n            }\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\FinishCmpChild.jsx",["180"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport backImg from '../assets/imgs/finish.png'\r\n\r\nexport function FinishCmpChild(props) {\r\n\r\n    const { roundFinishObj, isCategoryFinished } = props\r\n    return (\r\n        <section className=\"finishCmp child\">\r\n            <img src={backImg} alt=\"\" />\r\n            <div className=\"bless\">\r\n                <h1>{isCategoryFinished ? 'CATEGORY COMPLETED!' : roundFinishObj?.largeTxt}</h1>\r\n                <h4> {roundFinishObj?.littleTxt}</h4>\r\n            </div>\r\n            <div className={`btns-div ${isCategoryFinished ? 'j-cneter' : 'j-between'}`}>\r\n                <Link to=\"/dashboard\" className=\"btn-div\" style={{ width: isCategoryFinished ? '100%' : '45%' }}><div><p>STATUS</p></div></Link>\r\n                {!isCategoryFinished && <div className=\"btn-div\" onClick={async () => await props.continue(roundFinishObj?.status)}>\r\n                    <p>{roundFinishObj?.continueTxt}</p>\r\n                </div>}\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundCmpChild.jsx",["181"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport backImg from '../assets/imgs/round.png'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport function RoundCmpChild(props) {\r\n    const { roundFinishObj } = props\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className=\"roundCmp child\">\r\n            <img src={backImg} alt=\"\" />\r\n            <div className=\"bless\">\r\n                <h1>{roundFinishObj?.largeTxt}</h1>\r\n                <h4> {roundFinishObj?.littleTxt}</h4>\r\n            </div>\r\n            <div className=\"btns-div\">\r\n                <Link to=\"/dashboard\" className=\"btn-div\"><div><p>{t('status')}</p></div></Link>\r\n                <div className=\"btn-div\" onClick={async () => await props.continue(roundFinishObj?.status)}>\r\n                    <p>{roundFinishObj?.continueTxt}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\TimeCmpChild.jsx",["182","183"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport backImg from '../assets/imgs/time.png'\r\n\r\nexport function TimeCmpChild(props) {\r\n    const { roundFinishObj,lang } = props\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className=\"timeCmp child\">\r\n            <img src={backImg} alt=\"\" />\r\n            <div className=\"bless\">\r\n                <h1>{roundFinishObj?.largeTxt}</h1>\r\n                <h4> {roundFinishObj?.littleTxt}</h4>\r\n            </div>\r\n            <div className=\"btns-div\">\r\n                <Link to=\"/dashboard\" className=\"btn-div\"><div><p>{t('status')}</p></div></Link>\r\n                <div className=\"btn-div\" onClick={async () => await props.continue(roundFinishObj?.status)}>\r\n                    <p>{roundFinishObj?.continueTxt}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Dashboard.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatCmp.jsx",["184"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatModal.jsx",["185","186","187"],"import React from 'react';\r\nimport { Bar, Doughnut, Line, Pie } from 'react-chartjs-2'\r\nimport { useTranslation } from 'react-i18next'\r\n//icons:\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport function StatModal(props) {\r\n    const { closeModal, className, data, options, currVal, lang } = props\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className={className}>\r\n            <div className=\"pa flex j-between\">\r\n                <CloseRoundedIcon onClick={closeModal} />\r\n                <p>{currVal}</p>\r\n            </div>\r\n            <Bar data={data}\r\n                options={options}\r\n            />\r\n            <p style={{ fontFamily: lang === 'English' ? 'montserrat' : 'sans-serif' }}>{t('modal-desc')}</p>\r\n        </section>\r\n    );\r\n\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Loading.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Logout.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\i18next.js",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":13,"column":17,"nodeType":"194","messageId":"195","endLine":13,"endColumn":26},{"ruleId":"192","severity":1,"message":"196","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":9},{"ruleId":"192","severity":1,"message":"197","line":131,"column":23,"nodeType":"194","messageId":"195","endLine":131,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"198","line":4,"column":16,"nodeType":"194","messageId":"195","endLine":4,"endColumn":22},{"ruleId":"192","severity":1,"message":"199","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":17},{"ruleId":"200","severity":1,"message":"201","line":159,"column":13,"nodeType":"202","messageId":"203","endLine":171,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":174,"column":13,"nodeType":"202","messageId":"203","endLine":206,"endColumn":14},{"ruleId":"192","severity":1,"message":"204","line":47,"column":62,"nodeType":"194","messageId":"195","endLine":47,"endColumn":75},{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"205","line":14,"column":78,"nodeType":"194","messageId":"195","endLine":14,"endColumn":84},{"ruleId":"206","severity":1,"message":"207","line":22,"column":44,"nodeType":"208","endLine":22,"endColumn":48},{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"209","line":7,"column":28,"nodeType":"194","messageId":"195","endLine":7,"endColumn":32},{"ruleId":"192","severity":1,"message":"210","line":137,"column":17,"nodeType":"194","messageId":"195","endLine":137,"endColumn":23},{"ruleId":"192","severity":1,"message":"211","line":2,"column":15,"nodeType":"194","messageId":"195","endLine":2,"endColumn":23},{"ruleId":"192","severity":1,"message":"212","line":2,"column":25,"nodeType":"194","messageId":"195","endLine":2,"endColumn":29},{"ruleId":"192","severity":1,"message":"213","line":2,"column":31,"nodeType":"194","messageId":"195","endLine":2,"endColumn":34},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'country' is assigned a value but never used.","'Howler' is defined but never used.","'translate' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'categoriesSrc' is assigned a value but never used.","'points' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'lang' is assigned a value but never used.","'states' is assigned a value but never used.","'Doughnut' is defined but never used.","'Line' is defined but never used.","'Pie' is defined but never used.","no-global-assign","no-unsafe-negation"]